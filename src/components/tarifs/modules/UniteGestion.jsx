// UniteGestion.jsx - Version avec UniteTableSection et filtre int√©gr√©
import React, { useState, useEffect } from 'react';
import UniteTableSection from '../sections/UniteTableSection';
import { AddButton } from '../../../components/ui/buttons';
import TarifFormHeader from '../sections/TarifFormHeader';
import TarifFilter from '../components/TarifFilter';
import { useTarifFilter, createInitialFilters } from '../hooks/useTarifFilter';

const UniteGestion = ({ 
  unites = [],
  loadUnites,
  highlightedId,
  tarificationService,
  setMessage,
  setMessageType,
  setConfirmModal,
  // Nouveaux handlers du syst√®me unifi√©
  onCreateUnite,
  onEditUnite,
  onDeleteUnite
}) => {
  const [isSubmitting, setIsSubmitting] = useState(false);
  
  // ===== INT√âGRATION DU FILTRE =====
  const {
    filters,
    showFilters,
    filteredData: unitesFiltered,
    filterStats,
    handleFilterChange,
    handleResetFilters,
    handleToggleFilters
  } = useTarifFilter(unites, 'unites', createInitialFilters('unites'));

  // ===== HANDLERS POUR LE SYST√àME UNIFI√â =====
  
  const handleCreateClick = (event) => {
    if (onCreateUnite) {
      // Utiliser le nouveau syst√®me unifi√©
      onCreateUnite(event);
    } else {
      // Fallback vers l'ancien syst√®me (deprecated)
      console.warn('‚ö†Ô∏è onCreateUnite non fourni, utilisation du syst√®me legacy');
      handleLegacyCreate();
    }
  };
  
  const handleEditClick = (unite, event) => {
    if (onEditUnite) {
      // Utiliser le nouveau syst√®me unifi√©
      onEditUnite(unite.idUnite || unite.id, event);
    } else {
      // Fallback vers l'ancien syst√®me (deprecated)
      console.warn('‚ö†Ô∏è onEditUnite non fourni, utilisation du syst√®me legacy');
      handleLegacyEdit(unite);
    }
  };
  
  const handleDeleteClick = (unite, event) => {
    if (onDeleteUnite) {
      // Utiliser le nouveau syst√®me unifi√©
      onDeleteUnite(unite.idUnite || unite.id, unite.nom, event);
    } else {
      // Fallback vers l'ancien syst√®me (deprecated)
      console.warn('‚ö†Ô∏è onDeleteUnite non fourni, utilisation du syst√®me legacy');
      handleLegacyDelete(unite);
    }
  };
  
  // ===== LEGACY HANDLERS (DEPRECATED) =====
  const handleLegacyCreate = () => {
    console.log('üîß Legacy create handler appel√©');
  };
  
  const handleLegacyEdit = (unite) => {
    console.log('üîß Legacy edit handler appel√©:', unite);
  };
  
  const handleLegacyDelete = (unite) => {
    console.log('üîß Legacy delete handler appel√©:', unite);
  };

  // ===== RENDU PRINCIPAL =====
  
  return (
    <div className="unite-gestion">
      
      {/* Header avec bouton de cr√©ation */}
      <TarifFormHeader
        titre="Gestion des unit√©s"
        description="G√©rez les unit√©s de mesure utilis√©es dans vos services"
      >
        <AddButton onClick={handleCreateClick}>
          Nouvelle unit√©
        </AddButton>
      </TarifFormHeader>
      
      {/* ===== FILTRE - NOUVELLE INT√âGRATION ===== */}
      <TarifFilter
        filterType="unites"
        data={unites}
        filters={filters}
        onFilterChange={handleFilterChange}
        onResetFilters={handleResetFilters}
        showFilters={showFilters}
        onToggleFilters={handleToggleFilters}
        totalCount={filterStats.totalCount}
        filteredCount={filterStats.filteredCount}
        className="filter-unites"
      />
      
      {/* Utilisation d'UniteTableSection avec donn√©es filtr√©es */}
      <UniteTableSection
        unites={unitesFiltered}
        onEdit={handleEditClick}
        onDelete={handleDeleteClick}
        highlightedId={highlightedId}
        isSubmitting={isSubmitting}
      />
      
      {/* Informations de debug en mode d√©veloppement */}
      {process.env.NODE_ENV === 'development' && (
        <div className="debug-info" style={{
          marginTop: '20px',
          padding: '10px',
          backgroundColor: '#f8f9fa',
          border: '1px solid #dee2e6',
          borderRadius: '4px',
          fontSize: '12px'
        }}>
          <strong>üîß Debug UniteGestion :</strong><br/>
          - Unit√©s charg√©es : {unites.length}<br/>
          - Unit√©s filtr√©es : {unitesFiltered.length}<br/>
          - Filtres actifs : {filterStats.hasActiveFilters ? 'Oui' : 'Non'}<br/>
          - Highlighted ID : {highlightedId || 'aucun'}<br/>
          - Syst√®me unifi√© : {onCreateUnite ? '‚úÖ Actif' : '‚ùå Non connect√©'}<br/>
          - Is submitting : {isSubmitting ? 'Oui' : 'Non'}<br/>
          - Filtres actuels : {JSON.stringify(filters)}
        </div>
      )}
    </div>
  );
};

export default UniteGestion;